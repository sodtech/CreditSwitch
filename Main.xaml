<Activity mc:Ignorable="sap sap2010" x:Class="Main" mva:VisualBasic.Settings="{x:Null}" sap:VirtualizedContainerService.HintSize="804,1125.6" sap2010:WorkflowViewState.IdRef="ActivityBuilder_1" xmlns="http://schemas.microsoft.com/netfx/2009/xaml/activities" xmlns:av="http://schemas.microsoft.com/winfx/2006/xaml/presentation" xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" xmlns:mva="clr-namespace:Microsoft.VisualBasic.Activities;assembly=System.Activities" xmlns:s="clr-namespace:System;assembly=mscorlib" xmlns:sap="http://schemas.microsoft.com/netfx/2009/xaml/activities/presentation" xmlns:sap2010="http://schemas.microsoft.com/netfx/2010/xaml/activities/presentation" xmlns:scg="clr-namespace:System.Collections.Generic;assembly=mscorlib" xmlns:ui="http://schemas.uipath.com/workflow/activities" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
  <TextExpression.NamespacesForImplementation>
    <scg:List x:TypeArguments="x:String" Capacity="28">
      <x:String>System.Activities</x:String>
      <x:String>System.Activities.Statements</x:String>
      <x:String>System.Activities.Expressions</x:String>
      <x:String>System.Activities.Validation</x:String>
      <x:String>System.Activities.XamlIntegration</x:String>
      <x:String>Microsoft.VisualBasic</x:String>
      <x:String>Microsoft.VisualBasic.Activities</x:String>
      <x:String>System</x:String>
      <x:String>System.Collections</x:String>
      <x:String>System.Collections.Generic</x:String>
      <x:String>System.Data</x:String>
      <x:String>System.Diagnostics</x:String>
      <x:String>System.Drawing</x:String>
      <x:String>System.IO</x:String>
      <x:String>System.Linq</x:String>
      <x:String>System.Net.Mail</x:String>
      <x:String>System.Xml</x:String>
      <x:String>System.Xml.Linq</x:String>
      <x:String>UiPath.Core</x:String>
      <x:String>UiPath.Core.Activities</x:String>
      <x:String>System.Windows.Markup</x:String>
      <x:String>System.Collections.ObjectModel</x:String>
      <x:String>System.Activities.DynamicUpdate</x:String>
      <x:String>System.Runtime.Serialization</x:String>
      <x:String>System.Reflection</x:String>
      <x:String>System.Runtime.InteropServices</x:String>
      <x:String>System.ComponentModel</x:String>
      <x:String>System.Xml.Serialization</x:String>
    </scg:List>
  </TextExpression.NamespacesForImplementation>
  <TextExpression.ReferencesForImplementation>
    <scg:List x:TypeArguments="AssemblyReference" Capacity="31">
      <AssemblyReference>System.Activities</AssemblyReference>
      <AssemblyReference>Microsoft.VisualBasic</AssemblyReference>
      <AssemblyReference>mscorlib</AssemblyReference>
      <AssemblyReference>System.Data</AssemblyReference>
      <AssemblyReference>System</AssemblyReference>
      <AssemblyReference>System.Drawing</AssemblyReference>
      <AssemblyReference>System.Core</AssemblyReference>
      <AssemblyReference>System.Xml</AssemblyReference>
      <AssemblyReference>System.Xml.Linq</AssemblyReference>
      <AssemblyReference>PresentationFramework</AssemblyReference>
      <AssemblyReference>WindowsBase</AssemblyReference>
      <AssemblyReference>PresentationCore</AssemblyReference>
      <AssemblyReference>System.Xaml</AssemblyReference>
      <AssemblyReference>UiPath.System.Activities</AssemblyReference>
      <AssemblyReference>UiPath.UiAutomation.Activities</AssemblyReference>
      <AssemblyReference>System.Data.DataSetExtensions</AssemblyReference>
      <AssemblyReference>System.Runtime.Serialization</AssemblyReference>
      <AssemblyReference>System.ValueTuple</AssemblyReference>
      <AssemblyReference>System.Memory</AssemblyReference>
      <AssemblyReference>System.Memory.Data</AssemblyReference>
      <AssemblyReference>UiPath.Excel</AssemblyReference>
      <AssemblyReference>UiPath.Mail</AssemblyReference>
      <AssemblyReference>Microsoft.Bcl.AsyncInterfaces</AssemblyReference>
      <AssemblyReference>UiPath.OCR.Activities.Design</AssemblyReference>
      <AssemblyReference>UiPath.UIAutomationCore</AssemblyReference>
      <AssemblyReference>System.ServiceModel</AssemblyReference>
      <AssemblyReference>System.ComponentModel.Composition</AssemblyReference>
      <AssemblyReference>UiPathTeam.SharePoint</AssemblyReference>
      <AssemblyReference>OfficeDevPnP.Core</AssemblyReference>
      <AssemblyReference>System.Runtime.WindowsRuntime</AssemblyReference>
      <AssemblyReference>UiPath.System.Activities.Design</AssemblyReference>
    </scg:List>
  </TextExpression.ReferencesForImplementation>
  <Sequence DisplayName="CREDIT SWITCH BOT" sap:VirtualizedContainerService.HintSize="772.8,960.8" sap2010:WorkflowViewState.IdRef="Sequence_3">
    <Sequence.Variables>
      <Variable x:TypeArguments="scg:Dictionary(x:String, x:Object)" Name="Config" />
      <Variable x:TypeArguments="scg:Dictionary(x:String, x:Object)" Name="Sysfig" />
      <Variable x:TypeArguments="x:String" Name="FullFolderDirectory" />
      <Variable x:TypeArguments="s:DateTime" Name="ReportDate" />
      <Variable x:TypeArguments="s:DateTime" Name="ReconcillationDate" />
      <Variable x:TypeArguments="scg:List(s:DateTime)" Name="DateList" />
      <Variable x:TypeArguments="s:DateTime" Name="LedgerReportDate" />
      <Variable x:TypeArguments="s:DateTime" Name="ValueDate" />
      <Variable x:TypeArguments="s:DateTime" Name="LastRunDate" />
      <Variable x:TypeArguments="x:String" Name="LastRunStatus" />
      <Variable x:TypeArguments="s:DateTime" Name="LedgerDateToDownload" />
    </Sequence.Variables>
    <sap:WorkflowViewStateService.ViewState>
      <scg:Dictionary x:TypeArguments="x:String, x:Object">
        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
      </scg:Dictionary>
    </sap:WorkflowViewStateService.ViewState>
    <TryCatch DisplayName="Try Catch BOT " sap:VirtualizedContainerService.HintSize="731.2,868" sap2010:WorkflowViewState.IdRef="TryCatch_1">
      <sap:WorkflowViewStateService.ViewState>
        <scg:Dictionary x:TypeArguments="x:String, x:Object">
          <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          <x:Boolean x:Key="IsPinned">False</x:Boolean>
        </scg:Dictionary>
      </sap:WorkflowViewStateService.ViewState>
      <TryCatch.Try>
        <Flowchart DisplayName="RUN BOT" sap:VirtualizedContainerService.HintSize="694.4,636.8" sap2010:WorkflowViewState.IdRef="Flowchart_2">
          <Flowchart.Variables>
            <Variable x:TypeArguments="x:Boolean" Name="IsFileAvaliable" />
            <Variable x:TypeArguments="scg:List(s:DateTime)" Name="MerchantReportDateList" />
          </Flowchart.Variables>
          <sap:WorkflowViewStateService.ViewState>
            <scg:Dictionary x:TypeArguments="x:String, x:Object">
              <x:Boolean x:Key="IsExpanded">True</x:Boolean>
              <x:Boolean x:Key="IsPinned">False</x:Boolean>
              <av:Point x:Key="ShapeLocation">300,2.4</av:Point>
              <av:Size x:Key="ShapeSize">60,75.2</av:Size>
              <av:PointCollection x:Key="ConnectorLocation">330,77.6 330,115.6</av:PointCollection>
              <x:Double x:Key="Width">661.2</x:Double>
            </scg:Dictionary>
          </sap:WorkflowViewStateService.ViewState>
          <Flowchart.StartNode>
            <x:Reference>__ReferenceID5</x:Reference>
          </Flowchart.StartNode>
          <FlowStep x:Name="__ReferenceID5">
            <sap:WorkflowViewStateService.ViewState>
              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                <av:Point x:Key="ShapeLocation">230,115.6</av:Point>
                <av:Size x:Key="ShapeSize">200,68.8</av:Size>
                <av:PointCollection x:Key="ConnectorLocation">330,184.4 330,215.6</av:PointCollection>
              </scg:Dictionary>
            </sap:WorkflowViewStateService.ViewState>
            <Sequence DisplayName="Load System Settings" sap:VirtualizedContainerService.HintSize="416.8,1356" sap2010:WorkflowViewState.IdRef="Sequence_12">
              <sap:WorkflowViewStateService.ViewState>
                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                  <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                  <x:Boolean x:Key="IsPinned">False</x:Boolean>
                </scg:Dictionary>
              </sap:WorkflowViewStateService.ViewState>
              <ui:CommentOut DisplayName="Comment Out" sap:VirtualizedContainerService.HintSize="375.2,52.8" sap2010:WorkflowViewState.IdRef="CommentOut_5">
                <ui:CommentOut.Body>
                  <Sequence DisplayName="Ignored Activities" sap:VirtualizedContainerService.HintSize="375.2,145.6" sap2010:WorkflowViewState.IdRef="Sequence_14">
                    <sap:WorkflowViewStateService.ViewState>
                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                      </scg:Dictionary>
                    </sap:WorkflowViewStateService.ViewState>
                    <ui:InvokeWorkflowFile ContinueOnError="{x:Null}" DisplayName="KiillAllApplication workflow" sap:VirtualizedContainerService.HintSize="200,52.8" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_11" UnSafe="False" WorkflowFileName="Project\KiillAllApplication.xaml">
                      <ui:InvokeWorkflowFile.Arguments>
                        <scg:Dictionary x:TypeArguments="x:String, Argument" />
                      </ui:InvokeWorkflowFile.Arguments>
                      <sap:WorkflowViewStateService.ViewState>
                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                          <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                          <x:Boolean x:Key="IsPinned">False</x:Boolean>
                        </scg:Dictionary>
                      </sap:WorkflowViewStateService.ViewState>
                    </ui:InvokeWorkflowFile>
                  </Sequence>
                </ui:CommentOut.Body>
                <sap:WorkflowViewStateService.ViewState>
                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                    <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                    <x:Boolean x:Key="IsPinned">False</x:Boolean>
                  </scg:Dictionary>
                </sap:WorkflowViewStateService.ViewState>
              </ui:CommentOut>
              <ui:InvokeWorkflowFile ContinueOnError="{x:Null}" DisplayName="InitAllSettings workflow" sap:VirtualizedContainerService.HintSize="375.2,52.8" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_12" UnSafe="False" WorkflowFileName="Project\InitAllSettings.xaml">
                <ui:InvokeWorkflowFile.Arguments>
                  <InArgument x:TypeArguments="x:String" x:Key="in_ConfigFile">Data\Config.xlsx</InArgument>
                  <InArgument x:TypeArguments="s:String[]" x:Key="in_ConfigSheets">[{"Settings","Constants"}]</InArgument>
                  <OutArgument x:TypeArguments="scg:Dictionary(x:String, x:Object)" x:Key="out_Config">[Config]</OutArgument>
                </ui:InvokeWorkflowFile.Arguments>
                <sap:WorkflowViewStateService.ViewState>
                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                    <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                    <x:Boolean x:Key="IsPinned">False</x:Boolean>
                  </scg:Dictionary>
                </sap:WorkflowViewStateService.ViewState>
              </ui:InvokeWorkflowFile>
              <ui:InvokeWorkflowFile ContinueOnError="{x:Null}" DisplayName="Load_External_Config workflow" sap:VirtualizedContainerService.HintSize="375.2,52.8" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_13" UnSafe="False" WorkflowFileName="Project\Load_External_Config.xaml">
                <ui:InvokeWorkflowFile.Arguments>
                  <OutArgument x:TypeArguments="scg:Dictionary(x:String, x:Object)" x:Key="out_Sysfig">[Sysfig]</OutArgument>
                  <InArgument x:TypeArguments="x:String" x:Key="in_SysfigSheets">[Config("SheetName_SystemSettings").ToString]</InArgument>
                  <InArgument x:TypeArguments="x:String" x:Key="in_SysfigFile">[Config("ProcessDataConfigFilePath").ToString]</InArgument>
                </ui:InvokeWorkflowFile.Arguments>
                <sap:WorkflowViewStateService.ViewState>
                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                    <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                    <x:Boolean x:Key="IsPinned">False</x:Boolean>
                  </scg:Dictionary>
                </sap:WorkflowViewStateService.ViewState>
              </ui:InvokeWorkflowFile>
              <Sequence DisplayName="Days Malnipulation" sap:VirtualizedContainerService.HintSize="375.2,520.8" sap2010:WorkflowViewState.IdRef="Sequence_11">
                <Sequence.Variables>
                  <Variable x:TypeArguments="s:DateTime" Name="Last2RunDate" />
                </Sequence.Variables>
                <sap:WorkflowViewStateService.ViewState>
                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                    <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                    <x:Boolean x:Key="IsPinned">False</x:Boolean>
                  </scg:Dictionary>
                </sap:WorkflowViewStateService.ViewState>
                <ui:MultipleAssign DisplayName="Multiple Assign WF" sap:VirtualizedContainerService.HintSize="333.6,130.4" sap2010:WorkflowViewState.IdRef="MultipleAssign_3">
                  <ui:MultipleAssign.AssignOperations>
                    <scg:List x:TypeArguments="ui:AssignOperation" Capacity="4">
                      <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_4">
                        <ui:AssignOperation.To>
                          <OutArgument x:TypeArguments="s:DateTime">[LastRunDate]</OutArgument>
                        </ui:AssignOperation.To>
                        <ui:AssignOperation.Value>
                          <InArgument x:TypeArguments="s:DateTime">[DateTime.Parse(Sysfig("Last_RunDate").ToString)]</InArgument>
                        </ui:AssignOperation.Value>
                      </ui:AssignOperation>
                      <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_5">
                        <ui:AssignOperation.To>
                          <OutArgument x:TypeArguments="s:DateTime">[Last2RunDate]</OutArgument>
                        </ui:AssignOperation.To>
                        <ui:AssignOperation.Value>
                          <InArgument x:TypeArguments="s:DateTime">[DateTime.Parse(Sysfig("Last2RunDate").ToString)]</InArgument>
                        </ui:AssignOperation.Value>
                      </ui:AssignOperation>
                    </scg:List>
                  </ui:MultipleAssign.AssignOperations>
                  <sap:WorkflowViewStateService.ViewState>
                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                      <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                      <x:Boolean x:Key="IsPinned">False</x:Boolean>
                    </scg:Dictionary>
                  </sap:WorkflowViewStateService.ViewState>
                </ui:MultipleAssign>
                <ui:InvokeCode ContinueOnError="{x:Null}" Code="Out_MerchantDateList = new List&lt;DateTime&gt;();&#xD;&#xA;int DifferntLast2run =  (in_LastRunDate -  In_Last2RunDate).Days;&#xD;&#xA;int DifferntLastrun =  ( DateTime.Now - in_LastRunDate).Days;&#xD;&#xA;string CurrentDay = DateTime.Now.DayOfWeek.ToString();&#xD;&#xA; Console.WriteLine(&quot;DIfferent Days: &quot;+DifferntLast2run.ToString());&#xD;&#xA; Console.WriteLine(&quot;DIfferent Days: &quot;+DifferntLastrun.ToString());&#xD;&#xA;switch (CurrentDay)&#xD;&#xA;{&#xD;&#xA;  case &quot;Monday&quot;:&#xD;&#xA;&#x9;&#x9;// Doing Normal run for Monday&#xD;&#xA;&#x9;if (DifferntLast2run &lt;2 &amp;&amp; DifferntLastrun &lt;= 3  ){&#xD;&#xA;&#x9;&#x9;Out_LedgerDateToDownload = DateTime.Now.AddDays(-3);&#xD;&#xA;&#x9;    Out_MerchantDateList.Add(DateTime.Now.AddDays(-3));&#xD;&#xA;&#x9;    Out_MerchantDateList.Add(DateTime.Now.AddDays(-4));&#x9;&#xD;&#xA;&#x9;&#x9;break;&#xD;&#xA;&#x9;}&#xD;&#xA;&#x9;if (DifferntLast2run  &lt;=2 ){&#xD;&#xA;&#x9;&#x9;//Run if there is Holiday lastweek&#xD;&#xA;&#x9;&#x9;Out_LedgerDateToDownload = DateTime.Now.AddDays(-DifferntLastrun);&#xD;&#xA;&#x9;    Out_MerchantDateList.Add(DateTime.Now.AddDays(-DifferntLastrun));&#xD;&#xA;&#x9;    Out_MerchantDateList.Add(DateTime.Now.AddDays(-DifferntLastrun-1));&#x9;&#xD;&#xA;&#x9;&#x9;break;&#xD;&#xA;&#x9;} &#xD;&#xA;&#x9;if (DifferntLast2run &gt; 2){&#xD;&#xA;&#x9;&#x9;// Doing Weekend Run or Holiday&#xD;&#xA;&#x9;&#x9;Out_LedgerDateToDownload = DateTime.Now.AddDays(-DifferntLastrun);&#xD;&#xA;&#x9;&#x9;do {&#xD;&#xA;&#x9;&#x9;&#x9;   Out_MerchantDateList.Add(DateTime.Now.AddDays(- DifferntLast2run));&#xD;&#xA;&#x9;&#x9;&#x9; DifferntLast2run = DifferntLast2run +1;&#xD;&#xA;&#x9;&#x9;}while ( DifferntLast2run == 0 );&#xD;&#xA;&#x9;&#x9;break;&#xD;&#xA;&#x9;}      &#xD;&#xA;&#x9;break;&#xD;&#xA;case &quot;Tuesday&quot;:&#xD;&#xA;&#x9;&#x9;// Doing Normal run for Tuesday, Weekend Run&#xD;&#xA;&#x9;&#x9;if (DifferntLastrun == 1 &amp;&amp; DifferntLast2run &lt;= 3  ){&#xD;&#xA;&#x9;&#x9;Out_LedgerDateToDownload = DateTime.Now.AddDays(-1);&#xD;&#xA;&#x9;    Out_MerchantDateList.Add(DateTime.Now.AddDays(-2));&#xD;&#xA;&#x9;&#x9;Out_MerchantDateList.Add(DateTime.Now.AddDays(-3));&#xD;&#xA;&#x9;&#x9; Out_MerchantDateList.Add(DateTime.Now.AddDays(-4));&#xD;&#xA;&#x9;&#x9;&#x9;break;&#xD;&#xA;&#x9;}&#xD;&#xA;&#x9;if (DifferntLastrun  &gt; 3 &amp;&amp; DifferntLast2run &lt;= 3){&#xD;&#xA;&#x9;&#x9;//First Run in the Week, Hoilday on Monday&#xD;&#xA;&#x9;&#x9;Out_LedgerDateToDownload = DateTime.Now.AddDays(-DifferntLastrun);&#xD;&#xA;&#x9;    Out_MerchantDateList.Add(DateTime.Now.AddDays(-DifferntLastrun));&#xD;&#xA;&#x9;    Out_MerchantDateList.Add(DateTime.Now.AddDays(-DifferntLastrun-1));&#x9;&#xD;&#xA;&#x9;&#x9;&#x9;break;&#xD;&#xA;&#x9;}&#xD;&#xA;&#x9;&#xD;&#xA;&#x9;if (DifferntLastrun  &gt; 3 &amp;&amp; DifferntLast2run &gt;= 3){&#xD;&#xA;&#x9;&#x9;//First Run in the Week, Run for  Hoilday&#xD;&#xA;&#x9;&#x9;Out_LedgerDateToDownload = DateTime.Now.AddDays(-DifferntLastrun);&#xD;&#xA;&#x9;&#x9;do {&#xD;&#xA;&#x9;&#x9;&#x9;   Out_MerchantDateList.Add(DateTime.Now.AddDays(- DifferntLast2run));&#xD;&#xA;&#x9;&#x9;&#x9; DifferntLast2run = DifferntLast2run +1;&#xD;&#xA;&#x9;&#x9;}while ( DifferntLast2run == 0 );&#xD;&#xA;&#x9;}  &#xD;&#xA;&#x9;break;&#xD;&#xA;case &quot;Wednesday&quot;:&#xD;&#xA;&#x9;&#x9;// Doing Normal run for wednessday&#xD;&#xA;&#x9;&#x9;if (DifferntLastrun == 1 &amp;&amp; DifferntLast2run == 1  ){&#xD;&#xA;&#x9;&#x9;Out_LedgerDateToDownload = DateTime.Now.AddDays(-1);&#xD;&#xA;&#x9;    Out_MerchantDateList.Add(DateTime.Now.AddDays(-1));&#xD;&#xA;&#x9;&#x9;&#x9; Out_MerchantDateList.Add(DateTime.Now.AddDays(-2));&#xD;&#xA;&#x9;&#x9;&#x9;break;&#xD;&#xA;&#x9;}&#xD;&#xA;&#x9;if (DifferntLastrun &gt; 2 ){&#xD;&#xA;&#x9;&#x9;//First Run in the Week&#xD;&#xA;&#x9;&#x9;Out_LedgerDateToDownload = DateTime.Now.AddDays(-DifferntLastrun);&#xD;&#xA;&#x9;    Out_MerchantDateList.Add(DateTime.Now.AddDays(-DifferntLastrun));&#xD;&#xA;&#x9;&#x9;Out_MerchantDateList.Add(DateTime.Now.AddDays(-DifferntLastrun-1));&#xD;&#xA;&#x9;&#x9;&#x9;break;&#xD;&#xA;&#x9;}&#xD;&#xA;&#x9;&#xD;&#xA;&#x9;if (DifferntLastrun  &lt;= 2  ){&#xD;&#xA;&#x9;&#x9;//secound Run in the Week, Doing Weekend Run or Holiday&#xD;&#xA;&#x9;&#x9;Out_LedgerDateToDownload = DateTime.Now.AddDays(-DifferntLastrun);&#xD;&#xA;&#x9;&#x9;do {&#xD;&#xA;&#x9;&#x9;&#x9;   Out_MerchantDateList.Add(DateTime.Now.AddDays(-DifferntLastrun));&#xD;&#xA;&#x9;&#x9;&#x9; DifferntLastrun = DifferntLastrun + 1;&#xD;&#xA;&#x9;&#x9;}while ( DifferntLastrun == 0 );&#xD;&#xA;&#x9;&#x9;&#x9;break;&#xD;&#xA;&#x9;}&#xD;&#xA;&#x9;&#x9;break;&#xD;&#xA;case &quot;Thursday&quot;:&#xD;&#xA;&#x9;&#x9;// Doing Normal run for Thursay&#xD;&#xA;&#x9;&#x9;if (DifferntLastrun == 1 &amp;&amp; DifferntLast2run == 1  ){&#xD;&#xA;&#x9;&#x9;Out_LedgerDateToDownload = DateTime.Now.AddDays(-1);&#xD;&#xA;&#x9;    Out_MerchantDateList.Add(DateTime.Now.AddDays(-1));&#xD;&#xA;&#x9;&#x9;&#x9; Out_MerchantDateList.Add(DateTime.Now.AddDays(-2));&#xD;&#xA;&#x9;&#x9;&#x9;break;&#xD;&#xA;&#x9;}&#xD;&#xA;&#x9;&#x9;break;&#xD;&#xA;case &quot;Friday&quot;:&#xD;&#xA;&#x9;&#x9;&#x9;// Doing Normal run for Friday&#xD;&#xA;&#x9;&#x9;if (DifferntLastrun == 1 &amp;&amp; DifferntLast2run == 1  ){&#xD;&#xA;&#x9;&#x9;Out_LedgerDateToDownload = DateTime.Now.AddDays(-1);&#xD;&#xA;&#x9;    Out_MerchantDateList.Add(DateTime.Now.AddDays(-1));&#xD;&#xA;&#x9;&#x9;&#x9; Out_MerchantDateList.Add(DateTime.Now.AddDays(-2));&#xD;&#xA;&#x9;&#x9;&#x9;break;&#xD;&#xA;&#x9;}&#xD;&#xA;&#x9;&#x9;break;&#xD;&#xA;}" DisplayName="code For Date Malnipulation" sap:VirtualizedContainerService.HintSize="333.6,164.8" sap2010:WorkflowViewState.IdRef="InvokeCode_3" Language="CSharp">
                  <ui:InvokeCode.Arguments>
                    <InArgument x:TypeArguments="s:DateTime" x:Key="in_LastRunDate">
                      <mva:VisualBasicValue x:TypeArguments="s:DateTime" ExpressionText="LastRunDate" />
                    </InArgument>
                    <InArgument x:TypeArguments="s:DateTime" x:Key="In_Last2RunDate">
                      <mva:VisualBasicValue x:TypeArguments="s:DateTime" ExpressionText="Last2RunDate" />
                    </InArgument>
                    <OutArgument x:TypeArguments="scg:List(s:DateTime)" x:Key="Out_MerchantDateList">
                      <mva:VisualBasicReference x:TypeArguments="scg:List(s:DateTime)" ExpressionText="MerchantReportDateList" />
                    </OutArgument>
                    <OutArgument x:TypeArguments="s:DateTime" x:Key="Out_LedgerDateToDownload">
                      <mva:VisualBasicReference x:TypeArguments="s:DateTime" ExpressionText="LedgerDateToDownload" />
                    </OutArgument>
                  </ui:InvokeCode.Arguments>
                  <sap:WorkflowViewStateService.ViewState>
                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                      <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                      <x:Boolean x:Key="IsPinned">False</x:Boolean>
                    </scg:Dictionary>
                  </sap:WorkflowViewStateService.ViewState>
                </ui:InvokeCode>
                <ui:CommentOut DisplayName="Comment Out" sap:VirtualizedContainerService.HintSize="333.6,52.8" sap2010:WorkflowViewState.IdRef="CommentOut_6">
                  <ui:CommentOut.Body>
                    <Sequence DisplayName="Ignored Activities" sap:VirtualizedContainerService.HintSize="375.2,145.6" sap2010:WorkflowViewState.IdRef="Sequence_15">
                      <sap:WorkflowViewStateService.ViewState>
                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                          <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                        </scg:Dictionary>
                      </sap:WorkflowViewStateService.ViewState>
                      <ui:InvokeCode ContinueOnError="{x:Null}" Code="Out_MerchantDateList = new List&lt;DateTime&gt;();&#xA;string Status = In_LastRunStatus;&#xA;string CurrentDay = DateTime.Now.DayOfWeek.ToString();&#xA;string LastDayRun = in_LastRunDate.DayOfWeek.ToString();&#xA;int DifferentInDay;&#xA; DifferentInDay = (in_LastRunDate -   DateTime.Now).Days;&#xA; Console.WriteLine(&quot;DIfferent Days: &quot;+DifferentInDay.ToString());&#xA;switch (CurrentDay)&#xA;{&#xA;  case &quot;Monday&quot;:&#xA;&#x9;&#x9;switch (DifferentInDay)&#xA;&#x9;{&#xA;&#x9;&#x9;case -1:&#xA;&#x9;&#x9;&#x9;&#x9;Out_LedgerDateToDownload = DateTime.Now.AddDays(-3);&#xA;&#x9;            Out_MerchantDateList.Add(DateTime.Now.AddDays(-3));&#xA;&#x9;            Out_MerchantDateList.Add(DateTime.Now.AddDays(-4));&#x9;&#xA;&#x9;&#x9;&#x9;&#x9;break;&#xA;&#x9;&#x9;   case -2:&#xA;&#x9;&#x9;&#x9;&#x9;Out_LedgerDateToDownload = DateTime.Now.AddDays(-3);&#xA;&#x9;            Out_MerchantDateList.Add(DateTime.Now.AddDays(-3));&#xA;&#x9;            Out_MerchantDateList.Add(DateTime.Now.AddDays(-4));&#xA;&#x9;&#x9;&#x9;&#x9;break;&#xA;&#x9;&#x9;&#x9;case -3:&#xA;&#x9;&#x9;&#x9;&#x9;Out_LedgerDateToDownload = DateTime.Now.AddDays(-3);&#xA;&#x9;            Out_MerchantDateList.Add(DateTime.Now.AddDays(-3));&#xA;&#x9;            Out_MerchantDateList.Add(DateTime.Now.AddDays(-4));&#x9;&#xA;&#x9;&#x9;&#x9;&#x9;break;&#xA;&#x9;&#x9;    case -4:&#xA;&#x9;          Out_LedgerDateToDownload = DateTime.Now.AddDays(-4);&#xA;&#x9;          Out_MerchantDateList.Add(DateTime.Now.AddDays(-4));&#xA;&#x9;          Out_MerchantDateList.Add(DateTime.Now.AddDays(-5));&#xA;&#x9;&#x9;&#x9;&#x9;break;&#xA;&#x9;&#x9;&#x9;  case -5:&#xA;&#x9;          Out_LedgerDateToDownload = DateTime.Now.AddDays(-5);&#xA;&#x9;          Out_MerchantDateList.Add(DateTime.Now.AddDays(-5));&#xA;&#x9;          Out_MerchantDateList.Add(DateTime.Now.AddDays(-6));&#xA;&#x9;&#x9;&#x9;&#x9;break;&#xA;               case -6:&#xA;&#x9;          Out_LedgerDateToDownload = DateTime.Now.AddDays(-6);&#xA;&#x9;          Out_MerchantDateList.Add(DateTime.Now.AddDays(-6));&#xA;&#x9;          Out_MerchantDateList.Add(DateTime.Now.AddDays(-7));&#xA;&#x9;&#x9;&#x9;&#x9;break;&#xA;&#x9;&#x9;&#x9;&#x9;case -7:&#xA;&#x9;          Out_LedgerDateToDownload = DateTime.Now.AddDays(-7);&#xA;&#x9;          Out_MerchantDateList.Add(DateTime.Now.AddDays(-7));&#xA;&#x9;          Out_MerchantDateList.Add(DateTime.Now.AddDays(-8));&#xA;&#x9;&#x9;&#x9;  Out_MerchantDateList.Add(DateTime.Now.AddDays(-9));&#xA;&#x9;&#x9;&#x9;  Out_MerchantDateList.Add(DateTime.Now.AddDays(-10));&#xA;&#x9;&#x9;&#x9;&#x9;break;&#xA;&#x9;}&#xA;&#x9;break;&#xA;case &quot;Tuesday&quot;:&#xA;&#x9;&#x9;switch (DifferentInDay)&#xA;&#x9;{&#xA;&#x9;&#x9;case -1:&#xA;&#x9;          Out_LedgerDateToDownload = DateTime.Now.AddDays(-1);&#xA;&#x9;          Out_MerchantDateList.Add(DateTime.Now.AddDays(-4));&#xA;&#x9;          Out_MerchantDateList.Add(DateTime.Now.AddDays(-3));&#xA;&#x9;&#x9;&#x9;  Out_MerchantDateList.Add(DateTime.Now.AddDays(-2));&#xA;&#x9;&#x9;&#x9;  Out_MerchantDateList.Add(DateTime.Now.AddDays(-1));&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;break;&#xA;&#x9;&#x9;case -2:&#xA;&#x9;&#x9;&#x9;&#x9;Out_LedgerDateToDownload = DateTime.Now.AddDays(-3);&#xA;&#x9;            Out_MerchantDateList.Add(DateTime.Now.AddDays(-3));&#xA;&#x9;            Out_MerchantDateList.Add(DateTime.Now.AddDays(-4));&#x9;&#xA;&#x9;&#x9;&#x9;&#x9;break;&#xA;&#x9;&#x9;case -3:&#xA;&#x9;&#x9;&#x9;&#x9;Out_LedgerDateToDownload = DateTime.Now.AddDays(-3);&#xA;&#x9;            Out_MerchantDateList.Add(DateTime.Now.AddDays(-3));&#xA;&#x9;            Out_MerchantDateList.Add(DateTime.Now.AddDays(-4));&#xA;&#x9;&#x9;&#x9;&#x9;break;&#xA;&#x9;&#x9;case -4: &#xA;&#x9;&#x9;&#x9;&#x9;Out_LedgerDateToDownload = DateTime.Now.AddDays(-4);&#xA;&#x9;            Out_MerchantDateList.Add(DateTime.Now.AddDays(-4));&#xA;&#x9;            Out_MerchantDateList.Add(DateTime.Now.AddDays(-5));&#x9;&#xA;&#x9;&#x9;&#x9;&#x9;break;&#xA;&#x9;   case -5:&#xA;&#x9;          Out_LedgerDateToDownload = DateTime.Now.AddDays(-5);&#xA;&#x9;          Out_MerchantDateList.Add(DateTime.Now.AddDays(-5));&#xA;&#x9;          Out_MerchantDateList.Add(DateTime.Now.AddDays(-6));&#xA;&#x9;&#x9;&#x9;&#x9;break;&#xA;       case -6:&#xA;&#x9;          Out_LedgerDateToDownload = DateTime.Now.AddDays(-6);&#xA;&#x9;          Out_MerchantDateList.Add(DateTime.Now.AddDays(-6));&#xA;&#x9;          Out_MerchantDateList.Add(DateTime.Now.AddDays(-7));&#xA;&#x9;&#x9;&#x9;&#x9;break;&#xA;&#x9;&#x9; case -7:&#xA;&#x9;          Out_LedgerDateToDownload = DateTime.Now.AddDays(-11);&#xA;&#x9;          Out_MerchantDateList.Add(DateTime.Now.AddDays(-12));&#xA;&#x9;          Out_MerchantDateList.Add(DateTime.Now.AddDays(-12));&#xA;&#x9;&#x9;&#x9;&#x9;break;&#xA;&#x9;}&#x9;&#xA;&#x9;&#x9;break;&#xA;case &quot;Wednesday&quot;:&#xA;&#x9;&#x9;switch (DifferentInDay)&#xA;&#x9;{&#xA;&#x9;&#x9;case -1:&#xA;&#x9;&#x9;&#x9;&#x9;Out_LedgerDateToDownload = DateTime.Now.AddDays(-1);&#xA;&#x9;            Out_MerchantDateList.Add(DateTime.Now.AddDays(-1));&#xA;&#x9;            Out_MerchantDateList.Add(DateTime.Now.AddDays(-2));&#x9;&#xA;&#x9;&#x9;&#x9;&#x9;break;&#xA;&#x9;&#x9;case -2:&#xA;&#x9;          Out_LedgerDateToDownload = DateTime.Now.AddDays(-2);&#xA;&#x9;          Out_MerchantDateList.Add(DateTime.Now.AddDays(-2));&#xA;&#x9;          Out_MerchantDateList.Add(DateTime.Now.AddDays(-3));&#xA;&#x9;&#x9;&#x9;  Out_MerchantDateList.Add(DateTime.Now.AddDays(-4));&#xA;&#x9;&#x9;&#x9;  Out_MerchantDateList.Add(DateTime.Now.AddDays(-5));&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;break;&#xA;&#x9;&#x9;case -3:&#xA;&#x9;&#x9;&#x9;&#x9;Out_LedgerDateToDownload = DateTime.Now.AddDays(-6);&#xA;&#x9;            Out_MerchantDateList.Add(DateTime.Now.AddDays(-6));&#xA;&#x9;            Out_MerchantDateList.Add(DateTime.Now.AddDays(-5));&#x9;&#xA;&#x9;&#x9;&#x9;&#x9;break;&#xA;&#x9;&#x9;case -4:&#xA;&#x9;&#x9;&#x9;&#x9;Out_LedgerDateToDownload = DateTime.Now.AddDays(-6);&#xA;&#x9;            Out_MerchantDateList.Add(DateTime.Now.AddDays(-6));&#xA;&#x9;            Out_MerchantDateList.Add(DateTime.Now.AddDays(-5));&#x9;&#xA;&#x9;&#x9;&#x9;&#x9;break;&#xA;&#x9;&#x9;case -5: &#xA;&#x9;&#x9;   &#x9;&#x9;Out_LedgerDateToDownload = DateTime.Now.AddDays(-6);&#xA;&#x9;            Out_MerchantDateList.Add(DateTime.Now.AddDays(-6));&#xA;&#x9;            Out_MerchantDateList.Add(DateTime.Now.AddDays(-5));&#x9;&#xA;&#x9;&#x9;&#x9;&#x9;break;&#xA;&#x9;   case -6:&#xA;&#x9;          Out_LedgerDateToDownload = DateTime.Now.AddDays(-6);&#xA;&#x9;          Out_MerchantDateList.Add(DateTime.Now.AddDays(-6));&#xA;&#x9;          Out_MerchantDateList.Add(DateTime.Now.AddDays(-7));&#xA;&#x9;&#x9;&#x9;&#x9;break;&#xA;       case -7:&#xA;&#x9;          Out_LedgerDateToDownload = DateTime.Now.AddDays(-7);&#xA;&#x9;          Out_MerchantDateList.Add(DateTime.Now.AddDays(-7));&#xA;&#x9;          Out_MerchantDateList.Add(DateTime.Now.AddDays(-8));&#xA;&#x9;&#x9;&#x9;&#x9;break;&#xA;&#x9;&#x9; case -8:&#xA;&#x9;          Out_LedgerDateToDownload = DateTime.Now.AddDays(-8);&#xA;&#x9;          Out_MerchantDateList.Add(DateTime.Now.AddDays(-8));&#xA;&#x9;          Out_MerchantDateList.Add(DateTime.Now.AddDays(-9));&#xA;&#x9;&#x9;&#x9;&#x9;break;&#xA;&#x9;&#x9;   case -9:&#xA;&#x9;          Out_LedgerDateToDownload = DateTime.Now.AddDays(-12);&#xA;&#x9;          Out_MerchantDateList.Add(DateTime.Now.AddDays(-12));&#xA;&#x9;          Out_MerchantDateList.Add(DateTime.Now.AddDays(-13));&#xA;&#x9;&#x9;&#x9; break;&#xA;&#x9;}&#x9;&#xA;&#x9;&#x9;break;&#xA;case &quot;Thursday&quot;:&#xA;&#x9;&#x9;switch (DifferentInDay)&#xA;&#x9;{&#xA;&#x9; case -1:&#xA;&#x9;&#x9;&#x9;&#x9;Out_LedgerDateToDownload = DateTime.Now.AddDays(-1);&#xA;&#x9;            Out_MerchantDateList.Add(DateTime.Now.AddDays(-1));&#xA;&#x9;            Out_MerchantDateList.Add(DateTime.Now.AddDays(-2));&#x9;&#xA;&#x9;&#x9;&#x9;&#x9;break;&#xA;&#x9;  case -2:&#xA;&#x9;&#x9;&#x9;&#x9;Out_LedgerDateToDownload = DateTime.Now.AddDays(-2);&#xA;&#x9;            Out_MerchantDateList.Add(DateTime.Now.AddDays(-2));&#xA;&#x9;            Out_MerchantDateList.Add(DateTime.Now.AddDays(-3));&#x9;&#xA;&#x9;&#x9;&#x9;&#x9;break;&#xA;&#x9;&#x9;case -3:&#xA;&#x9;          Out_LedgerDateToDownload = DateTime.Now.AddDays(-3);&#xA;&#x9;          Out_MerchantDateList.Add(DateTime.Now.AddDays(-3));&#xA;&#x9;          Out_MerchantDateList.Add(DateTime.Now.AddDays(-4));&#xA;&#x9;&#x9;&#x9;  Out_MerchantDateList.Add(DateTime.Now.AddDays(-5));&#xA;&#x9;&#x9;&#x9;  Out_MerchantDateList.Add(DateTime.Now.AddDays(-6));&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;break;&#xA;&#x9;&#x9;case -4:&#xA;&#x9;&#x9;&#x9;  Out_LedgerDateToDownload = DateTime.Now.AddDays(-6);&#xA;&#x9;           Out_MerchantDateList.Add(DateTime.Now.AddDays(-7));&#xA;&#x9;&#x9;&#x9;&#x9;break;&#xA;&#x9;&#x9;case -5:&#xA;&#x9;&#x9;&#x9;Out_LedgerDateToDownload = DateTime.Now.AddDays(-6);&#xA;&#x9;&#x9;&#x9; Out_MerchantDateList.Add(DateTime.Now.AddDays(-6));&#xA;&#x9;          Out_MerchantDateList.Add(DateTime.Now.AddDays(-7));&#xA;&#x9;&#x9;&#x9;&#x9;break;&#xA;&#x9;&#x9;case -6: &#xA;&#x9;&#x9;&#x9;&#x9;Out_LedgerDateToDownload = DateTime.Now.AddDays(-6);&#xA;&#x9;            Out_MerchantDateList.Add(DateTime.Now.AddDays(-6));&#xA;&#x9;&#x9;&#x9;&#x9; Out_MerchantDateList.Add(DateTime.Now.AddDays(-7));&#xA;&#x9;&#x9;&#x9;&#x9;break;&#xA;       case -7:&#xA;&#x9;          Out_LedgerDateToDownload = DateTime.Now.AddDays(-7);&#xA;&#x9;          Out_MerchantDateList.Add(DateTime.Now.AddDays(-7));&#xA;&#x9;          Out_MerchantDateList.Add(DateTime.Now.AddDays(-8));&#xA;&#x9;&#x9;&#x9;&#x9;break;&#xA;&#x9;   case -8:&#xA;&#x9;          Out_LedgerDateToDownload = DateTime.Now.AddDays(-8);&#xA;&#x9;          Out_MerchantDateList.Add(DateTime.Now.AddDays(-8));&#xA;&#x9;          Out_MerchantDateList.Add(DateTime.Now.AddDays(-9));&#xA;&#x9;&#x9;&#x9;&#x9;break;&#xA;&#x9;&#x9;case -9:&#xA;&#x9;          Out_LedgerDateToDownload = DateTime.Now.AddDays(-9);&#xA;&#x9;          Out_MerchantDateList.Add(DateTime.Now.AddDays(-9));&#xA;&#x9;          Out_MerchantDateList.Add(DateTime.Now.AddDays(-10));&#xA;&#x9;&#x9;&#x9; break;&#xA;&#x9;&#x9;   case -10:&#xA;&#x9;          Out_LedgerDateToDownload = DateTime.Now.AddDays(-13);&#xA;&#x9;          Out_MerchantDateList.Add(DateTime.Now.AddDays(-13));&#xA;&#x9;          Out_MerchantDateList.Add(DateTime.Now.AddDays(-14));&#xA;&#x9;&#x9;&#x9; break;&#xA;&#x9;}&#x9;&#xA;&#x9;&#x9;break;&#xA;case &quot;Friday&quot;:&#xA;&#x9;&#x9;switch (DifferentInDay)&#xA;&#x9;{&#xA;&#x9; case -1:&#xA;&#x9;&#x9;&#x9;&#x9;Out_LedgerDateToDownload = DateTime.Now.AddDays(-1);&#xA;&#x9;            Out_MerchantDateList.Add(DateTime.Now.AddDays(-1));&#xA;&#x9;            Out_MerchantDateList.Add(DateTime.Now.AddDays(-2));&#x9;&#xA;&#x9;&#x9;&#x9;&#x9;break;&#xA;&#x9;  case -2:&#xA;&#x9;&#x9;&#x9;&#x9;Out_LedgerDateToDownload = DateTime.Now.AddDays(-2);&#xA;&#x9;            Out_MerchantDateList.Add(DateTime.Now.AddDays(-2));&#xA;&#x9;            Out_MerchantDateList.Add(DateTime.Now.AddDays(-3));&#x9;&#xA;&#x9;&#x9;&#x9;&#x9;break;&#xA;&#x9;&#x9;case -3:&#xA;&#x9;&#x9;&#x9;  Out_LedgerDateToDownload = DateTime.Now.AddDays(-3);&#xA;&#x9;&#x9;&#x9;&#x9;Out_MerchantDateList.Add(DateTime.Now.AddDays(-3));&#xA;&#x9;           Out_MerchantDateList.Add(DateTime.Now.AddDays(-4));&#xA;&#x9;&#x9;&#x9;&#x9;break;&#xA;&#x9;&#x9;case -4:&#xA;&#x9;&#x9;       Out_LedgerDateToDownload = DateTime.Now.AddDays(-4);&#xA;&#x9;          Out_MerchantDateList.Add(DateTime.Now.AddDays(-4));&#xA;&#x9;&#x9;&#x9;  Out_MerchantDateList.Add(DateTime.Now.AddDays(-5));&#xA;&#x9;&#x9;&#x9;  Out_MerchantDateList.Add(DateTime.Now.AddDays(-6));&#xA;&#x9;&#x9;&#x9;  Out_MerchantDateList.Add(DateTime.Now.AddDays(-7));&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;break;&#xA;&#x9;&#x9;case -5:&#xA;&#x9;&#x9;&#x9; Out_LedgerDateToDownload = DateTime.Now.AddDays(-7);&#xA;&#x9;&#x9;&#x9;&#x9; Out_MerchantDateList.Add(DateTime.Now.AddDays(-7));&#xA;&#x9;         Out_MerchantDateList.Add(DateTime.Now.AddDays(-8));&#xA;&#x9;&#x9;&#x9;&#x9;break;&#xA;&#x9;&#x9;case -6: &#xA;&#x9;&#x9;&#x9;&#x9;Out_LedgerDateToDownload = DateTime.Now.AddDays(-7);&#xA;&#x9;&#x9;&#x9;&#x9;  Out_MerchantDateList.Add(DateTime.Now.AddDays(-7));&#xA;&#x9;            Out_MerchantDateList.Add(DateTime.Now.AddDays(-8));&#xA;&#x9;&#x9;&#x9;&#x9;break;&#xA;       case -7:&#xA;&#x9;          Out_LedgerDateToDownload = DateTime.Now.AddDays(-7);&#xA;&#x9;          Out_MerchantDateList.Add(DateTime.Now.AddDays(-7));&#xA;&#x9;          Out_MerchantDateList.Add(DateTime.Now.AddDays(-8));&#xA;&#x9;&#x9;&#x9;&#x9;break;&#xA;&#x9;   case -8:&#xA;&#x9;          Out_LedgerDateToDownload = DateTime.Now.AddDays(-8);&#xA;&#x9;          Out_MerchantDateList.Add(DateTime.Now.AddDays(-8));&#xA;&#x9;          Out_MerchantDateList.Add(DateTime.Now.AddDays(-9));&#xA;&#x9;&#x9;&#x9;&#x9;break;&#xA;&#x9;&#x9;case -9:&#xA;&#x9;          Out_LedgerDateToDownload = DateTime.Now.AddDays(-9);&#xA;&#x9;          Out_MerchantDateList.Add(DateTime.Now.AddDays(-9));&#xA;&#x9;          Out_MerchantDateList.Add(DateTime.Now.AddDays(-10));&#xA;&#x9;&#x9;&#x9; break;&#xA;&#x9;&#x9;   case -10:&#xA;&#x9;          Out_LedgerDateToDownload = DateTime.Now.AddDays(-10);&#xA;&#x9;          Out_MerchantDateList.Add(DateTime.Now.AddDays(-11));&#xA;&#x9;          Out_MerchantDateList.Add(DateTime.Now.AddDays(-12));&#xA;&#x9;&#x9;&#x9; break;&#xA;&#x9;&#x9;&#x9; case -11:&#xA;&#x9;          Out_LedgerDateToDownload = DateTime.Now.AddDays(-14);&#xA;&#x9;          Out_MerchantDateList.Add(DateTime.Now.AddDays(-14));&#xA;&#x9;          Out_MerchantDateList.Add(DateTime.Now.AddDays(-15));&#xA;&#x9;&#x9;&#x9; break;&#xA;&#x9;}&#x9;&#xA;&#x9;&#x9;break;&#xA;}" DisplayName="code For Date Malnipulation" sap:VirtualizedContainerService.HintSize="200,52.8" sap2010:WorkflowViewState.IdRef="InvokeCode_4" Language="CSharp">
                        <ui:InvokeCode.Arguments>
                          <InArgument x:TypeArguments="s:DateTime" x:Key="in_LastRunDate">[LastRunDate]</InArgument>
                          <InArgument x:TypeArguments="x:String" x:Key="In_LastRunStatus">[LastRunStatus]</InArgument>
                          <OutArgument x:TypeArguments="scg:List(s:DateTime)" x:Key="Out_MerchantDateList">[MerchantReportDateList]</OutArgument>
                          <OutArgument x:TypeArguments="s:DateTime" x:Key="Out_LedgerDateToDownload">[LedgerDateToDownload]</OutArgument>
                        </ui:InvokeCode.Arguments>
                        <sap:WorkflowViewStateService.ViewState>
                          <scg:Dictionary x:TypeArguments="x:String, x:Object">
                            <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                            <x:Boolean x:Key="IsPinned">False</x:Boolean>
                          </scg:Dictionary>
                        </sap:WorkflowViewStateService.ViewState>
                      </ui:InvokeCode>
                    </Sequence>
                  </ui:CommentOut.Body>
                  <sap:WorkflowViewStateService.ViewState>
                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                      <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                      <x:Boolean x:Key="IsPinned">False</x:Boolean>
                    </scg:Dictionary>
                  </sap:WorkflowViewStateService.ViewState>
                </ui:CommentOut>
              </Sequence>
              <ui:LogMessage DisplayName="Log Message" sap:VirtualizedContainerService.HintSize="375.2,52.8" sap2010:WorkflowViewState.IdRef="LogMessage_3" Level="Info" Message="[LedgerDateToDownload.ToString]">
                <sap:WorkflowViewStateService.ViewState>
                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                    <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                    <x:Boolean x:Key="IsPinned">False</x:Boolean>
                  </scg:Dictionary>
                </sap:WorkflowViewStateService.ViewState>
              </ui:LogMessage>
              <ui:LogMessage DisplayName="Log Message" sap:VirtualizedContainerService.HintSize="375.2,52.8" sap2010:WorkflowViewState.IdRef="LogMessage_4" Level="Info" Message="[MerchantReportDateList.Count.ToString]">
                <sap:WorkflowViewStateService.ViewState>
                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                    <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                    <x:Boolean x:Key="IsPinned">False</x:Boolean>
                  </scg:Dictionary>
                </sap:WorkflowViewStateService.ViewState>
              </ui:LogMessage>
              <ui:LogMessage DisplayName="Log Message" sap:VirtualizedContainerService.HintSize="375.2,52.8" sap2010:WorkflowViewState.IdRef="LogMessage_5" Level="Info" Message="[MerchantReportDateList(0).ToString +&quot; &quot;+ MerchantReportDateList(1).ToString]">
                <sap:WorkflowViewStateService.ViewState>
                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                    <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                    <x:Boolean x:Key="IsPinned">False</x:Boolean>
                  </scg:Dictionary>
                </sap:WorkflowViewStateService.ViewState>
              </ui:LogMessage>
              <ui:InvokeWorkflowFile ContinueOnError="{x:Null}" DisplayName="ValadateWorkFoldersPaths workflow" sap:VirtualizedContainerService.HintSize="200,52.8" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_14" UnSafe="False" WorkflowFileName="Project\ValidatesWorkFolder.xaml">
                <ui:InvokeWorkflowFile.Arguments>
                  <InArgument x:TypeArguments="s:DateTime" x:Key="in_ReportDate">[ReconcillationDate]</InArgument>
                  <InArgument x:TypeArguments="x:String" x:Key="in_Drive_Directory">[Config("DriveDirectoryFolderPath").ToString]</InArgument>
                  <OutArgument x:TypeArguments="x:String" x:Key="out_FullFolderDirectory">[FullFolderDirectory]</OutArgument>
                </ui:InvokeWorkflowFile.Arguments>
                <sap:WorkflowViewStateService.ViewState>
                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                    <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                    <x:Boolean x:Key="IsPinned">False</x:Boolean>
                  </scg:Dictionary>
                </sap:WorkflowViewStateService.ViewState>
              </ui:InvokeWorkflowFile>
              <ui:InvokeWorkflowFile ContinueOnError="{x:Null}" DisplayName="DeletReportFile workflow" sap:VirtualizedContainerService.HintSize="200,52.8" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_15" UnSafe="False" WorkflowFileName="Project\DeletReportFile.xaml">
                <ui:InvokeWorkflowFile.Arguments>
                  <InArgument x:TypeArguments="x:String" x:Key="in_FullFilePath">[Path.Combine(FullFolderDirectory,Config("Input_FileName").ToString)]</InArgument>
                </ui:InvokeWorkflowFile.Arguments>
                <sap:WorkflowViewStateService.ViewState>
                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                    <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                    <x:Boolean x:Key="IsPinned">False</x:Boolean>
                  </scg:Dictionary>
                </sap:WorkflowViewStateService.ViewState>
              </ui:InvokeWorkflowFile>
            </Sequence>
            <FlowStep.Next>
              <FlowStep x:Name="__ReferenceID3">
                <sap:WorkflowViewStateService.ViewState>
                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                    <av:Point x:Key="ShapeLocation">230,215.6</av:Point>
                    <av:Size x:Key="ShapeSize">200,52.8</av:Size>
                    <av:PointCollection x:Key="ConnectorLocation">230,242 78,242 78,286.4</av:PointCollection>
                  </scg:Dictionary>
                </sap:WorkflowViewStateService.ViewState>
                <ui:InvokeWorkflowFile ContinueOnError="{x:Null}" DisplayName="CheckingRequiredFiles" sap:VirtualizedContainerService.HintSize="200,52.8" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_16" UnSafe="False" WorkflowFileName="Project\CheckingRequiredFiles.xaml">
                  <ui:InvokeWorkflowFile.Arguments>
                    <InArgument x:TypeArguments="scg:Dictionary(x:String, x:Object)" x:Key="in_SisFig">[Sysfig]</InArgument>
                    <OutArgument x:TypeArguments="x:Boolean" x:Key="out_IsFileAvaliable">[IsFileAvaliable]</OutArgument>
                  </ui:InvokeWorkflowFile.Arguments>
                </ui:InvokeWorkflowFile>
                <FlowStep.Next>
                  <FlowDecision x:Name="__ReferenceID4" Condition="[IsFileAvaliable]" DisplayName="Is Files Avail?" sap:VirtualizedContainerService.HintSize="75.2,87.2" sap2010:WorkflowViewState.IdRef="FlowDecision_2">
                    <sap:WorkflowViewStateService.ViewState>
                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                        <av:Point x:Key="ShapeLocation">40.4,286.4</av:Point>
                        <av:Size x:Key="ShapeSize">75.2,87.2</av:Size>
                        <av:PointCollection x:Key="FalseConnector">115.6,330 230,330</av:PointCollection>
                        <av:PointCollection x:Key="TrueConnector">40.4,330 10.4,330 10.4,420 230,420</av:PointCollection>
                      </scg:Dictionary>
                    </sap:WorkflowViewStateService.ViewState>
                    <FlowDecision.True>
                      <FlowStep x:Name="__ReferenceID0">
                        <sap:WorkflowViewStateService.ViewState>
                          <scg:Dictionary x:TypeArguments="x:String, x:Object">
                            <av:Point x:Key="ShapeLocation">230,393.6</av:Point>
                            <av:Size x:Key="ShapeSize">200,52.8</av:Size>
                            <av:PointCollection x:Key="ConnectorLocation">330,446.4 330,475.6</av:PointCollection>
                          </scg:Dictionary>
                        </sap:WorkflowViewStateService.ViewState>
                        <ui:InvokeWorkflowFile ContinueOnError="{x:Null}" DisplayName="Computations workflow" sap:VirtualizedContainerService.HintSize="200,52.8" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_17" UnSafe="False" WorkflowFileName="CreditSwitch\Computations.xaml">
                          <ui:InvokeWorkflowFile.Arguments>
                            <InArgument x:TypeArguments="scg:Dictionary(x:String, x:Object)" x:Key="in_Config">[Config]</InArgument>
                            <InArgument x:TypeArguments="x:String" x:Key="in_FullFolderDirectory">[FullFolderDirectory]</InArgument>
                            <InArgument x:TypeArguments="s:DateTime" x:Key="in_Date">[ReconcillationDate]</InArgument>
                            <InArgument x:TypeArguments="scg:Dictionary(x:String, x:Object)" x:Key="in_Sisfig">[Sysfig]</InArgument>
                          </ui:InvokeWorkflowFile.Arguments>
                        </ui:InvokeWorkflowFile>
                        <FlowStep.Next>
                          <FlowStep x:Name="__ReferenceID2">
                            <sap:WorkflowViewStateService.ViewState>
                              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                <av:Point x:Key="ShapeLocation">230,475.6</av:Point>
                                <av:Size x:Key="ShapeSize">200,52.8</av:Size>
                              </scg:Dictionary>
                            </sap:WorkflowViewStateService.ViewState>
                            <ui:InvokeWorkflowFile ContinueOnError="{x:Null}" DisplayName="Reporting workflow" sap:VirtualizedContainerService.HintSize="200,52.8" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_18" UnSafe="False" WorkflowFileName="Project\Reporting.xaml">
                              <ui:InvokeWorkflowFile.Arguments>
                                <InArgument x:TypeArguments="scg:Dictionary(x:String, x:Object)" x:Key="in_SysFig">
                                  <mva:VisualBasicValue x:TypeArguments="scg:Dictionary(x:String, x:Object)" ExpressionText="Sysfig" />
                                </InArgument>
                                <InArgument x:TypeArguments="scg:Dictionary(x:String, x:Object)" x:Key="in_ConFig">
                                  <mva:VisualBasicValue x:TypeArguments="scg:Dictionary(x:String, x:Object)" ExpressionText="Config" />
                                </InArgument>
                                <InArgument x:TypeArguments="x:String" x:Key="in_FullFolderDirectory">
                                  <mva:VisualBasicValue x:TypeArguments="x:String" ExpressionText="FullFolderDirectory" />
                                </InArgument>
                                <InArgument x:TypeArguments="s:DateTime" x:Key="in_ReconcillationDate">
                                  <mva:VisualBasicValue x:TypeArguments="s:DateTime" ExpressionText="ReconcillationDate" />
                                </InArgument>
                                <InArgument x:TypeArguments="s:DateTime" x:Key="in_ReportDate">
                                  <mva:VisualBasicValue x:TypeArguments="s:DateTime" ExpressionText="ReportDate" />
                                </InArgument>
                              </ui:InvokeWorkflowFile.Arguments>
                            </ui:InvokeWorkflowFile>
                          </FlowStep>
                        </FlowStep.Next>
                      </FlowStep>
                    </FlowDecision.True>
                    <FlowDecision.False>
                      <FlowStep x:Name="__ReferenceID1">
                        <sap:WorkflowViewStateService.ViewState>
                          <scg:Dictionary x:TypeArguments="x:String, x:Object">
                            <av:Point x:Key="ShapeLocation">230,303.6</av:Point>
                            <av:Size x:Key="ShapeSize">200,52.8</av:Size>
                            <av:PointCollection x:Key="ConnectorLocation">330,356.4 330,393.6</av:PointCollection>
                          </scg:Dictionary>
                        </sap:WorkflowViewStateService.ViewState>
                        <ui:InvokeWorkflowFile ContinueOnError="{x:Null}" DisplayName="DownlodallFiles workflow" sap:VirtualizedContainerService.HintSize="200,52.8" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_19" UnSafe="False" WorkflowFileName="CreditSwitch\DownlodallFiles.xaml">
                          <ui:InvokeWorkflowFile.Arguments>
                            <InArgument x:TypeArguments="scg:Dictionary(x:String, x:Object)" x:Key="in_Sisfig">
                              <mva:VisualBasicValue x:TypeArguments="scg:Dictionary(x:String, x:Object)" ExpressionText="Sysfig" />
                            </InArgument>
                            <InArgument x:TypeArguments="scg:Dictionary(x:String, x:Object)" x:Key="In_Config">
                              <mva:VisualBasicValue x:TypeArguments="scg:Dictionary(x:String, x:Object)" ExpressionText="Config" />
                            </InArgument>
                            <InArgument x:TypeArguments="scg:List(s:DateTime)" x:Key="in_CreditReportDateList">
                              <mva:VisualBasicValue x:TypeArguments="scg:List(s:DateTime)" ExpressionText="MerchantReportDateList" />
                            </InArgument>
                            <InArgument x:TypeArguments="x:String" x:Key="in_FullFolderDirectory">
                              <mva:VisualBasicValue x:TypeArguments="x:String" ExpressionText="FullFolderDirectory" />
                            </InArgument>
                            <InArgument x:TypeArguments="scg:List(s:DateTime)" x:Key="in_MerchantReportDateList">
                              <mva:VisualBasicValue x:TypeArguments="scg:List(s:DateTime)" ExpressionText="MerchantReportDateList" />
                            </InArgument>
                            <InArgument x:TypeArguments="s:DateTime" x:Key="in_LegerReportDate">
                              <mva:VisualBasicValue x:TypeArguments="s:DateTime" ExpressionText="LedgerReportDate" />
                            </InArgument>
                          </ui:InvokeWorkflowFile.Arguments>
                        </ui:InvokeWorkflowFile>
                        <FlowStep.Next>
                          <x:Reference>__ReferenceID0</x:Reference>
                        </FlowStep.Next>
                      </FlowStep>
                    </FlowDecision.False>
                  </FlowDecision>
                </FlowStep.Next>
              </FlowStep>
            </FlowStep.Next>
          </FlowStep>
          <x:Reference>__ReferenceID1</x:Reference>
          <x:Reference>__ReferenceID0</x:Reference>
          <x:Reference>__ReferenceID2</x:Reference>
          <x:Reference>__ReferenceID3</x:Reference>
          <x:Reference>__ReferenceID4</x:Reference>
        </Flowchart>
      </TryCatch.Try>
      <TryCatch.Catches>
        <Catch x:TypeArguments="s:Exception" sap:VirtualizedContainerService.HintSize="697.6,22.4" sap2010:WorkflowViewState.IdRef="Catch`1_1">
          <sap:WorkflowViewStateService.ViewState>
            <scg:Dictionary x:TypeArguments="x:String, x:Object">
              <x:Boolean x:Key="IsExpanded">False</x:Boolean>
              <x:Boolean x:Key="IsPinned">False</x:Boolean>
            </scg:Dictionary>
          </sap:WorkflowViewStateService.ViewState>
          <ActivityAction x:TypeArguments="s:Exception">
            <ActivityAction.Argument>
              <DelegateInArgument x:TypeArguments="s:Exception" Name="exception" />
            </ActivityAction.Argument>
            <Sequence DisplayName="Exception Sequences" sap:VirtualizedContainerService.HintSize="200,84.8" sap2010:WorkflowViewState.IdRef="Sequence_2">
              <sap:WorkflowViewStateService.ViewState>
                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                  <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                </scg:Dictionary>
              </sap:WorkflowViewStateService.ViewState>
            </Sequence>
          </ActivityAction>
        </Catch>
      </TryCatch.Catches>
    </TryCatch>
  </Sequence>
</Activity>